{"version":3,"sources":["components/Spinner/Spinner.js","components/Text/style.js","components/Text/Text.js","components/UserCard/style.js","components/UserCard/UserCard.js","services/countries.js","components/UserList/style.js","components/UserList/UserList.js","hooks/useInfiniteScroll.js","services/localStorage.js","hooks/useFavoritesList.js","components/Layout/style.js","components/Layout/Layout.js","components/Title/style.js","components/Title/Title.js","pages/Home/Home.js","hooks/usePeopleFetch.js","components/FavoritesList/style.js","components/FavoritesList/FavoritesList.js","pages/Favorites/Favorites.js","services/constant.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Spinner","size","color","thickness","variant","CircularProgress","Text","styled","span","bold","children","Typography","IconButtonWrapper","div","isVisible","User","UserInfo","UserPicture","img","UserCard","user","onFavorite","isFavorited","src","picture","large","alt","name","title","first","last","email","location","street","number","country","IconButton","onClick","Countries","code","UserList","List","SpinnerWrapper","FormControlStyled","FormControl","CountriesSelect","selectedCountries","onChange","InputLabel","id","Select","labelId","multiple","placeholder","value","input","Input","renderValue","selected","map","Chip","label","find","c","MenuItem","Checkbox","checked","includes","ListItemText","primary","users","isLoading","fetchUsers","resetUsers","favorites","toggleFavorite","useState","setSelectedCountries","loading","onLoadMore","useTrackVisibility","ref","rootRef","shouldLoadMore","useEffect","timer","setTimeout","clearTimeout","useInfiniteScroll","infiniteRef","event","target","index","d","LocalStorage","key","item","window","localStorage","getItem","JSON","parse","error","console","log","setItem","stringify","useFavoritesList","setFavorites","a","isExist","f","filter","Container","Page","Layout","Title","Home","props","setUsers","page","setPage","setIsLoading","countries","axios","get","join","response","concat","data","results","usePeopleFetch","React","memo","Empty","FavoritesList","length","Favorites","THEMES","ThemeContext","createContext","GlobalStyles","createGlobalStyle","theme","palette","background","default","main","ThemeProvider","themeState","setTheme","primaryColor","useMemo","createMuiTheme","overrides","type","Provider","CssBaseline","NavBar","setValue","pathname","useLocation","context","useContext","undefined","Error","useTheme","AppBar","style","position","top","flexDirection","justifyContent","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","to","component","Link","AppRouter","exact","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a3e7abb9.chunk.js","sourcesContent":["import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Spinner = ({ size, color, thickness, variant }) => {\n  return (\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\n  );\n};\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const Text = styled.span`\n  font-size: ${({ size }) => size};\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\n`;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport * as S from \"./style\";\n\nconst Text = ({ size = \"14px\", children, bold }) => {\n  return (\n    <Typography>\n      <S.Text size={size} bold={bold}>\n        {children}\n      </S.Text>\n    </Typography>\n  );\n};\n\nexport default Text;\n","import styled from \"styled-components\";\nimport {\n  Checkbox,\n  Chip,\n  FormControl,\n  Input,\n  InputLabel,\n  ListItemText,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  &:hover ${IconButtonWrapper} {\n    opacity: 1;\n  }\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n\n  p {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const UserPicture = styled.img`\n  border-radius: 45%;\n\n  @media (max-width: 800px) {\n    width: 100px;\n    height: 100px;\n  }\n`;\n","import React from \"react\";\nimport { IconButton, Typography } from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport Text from \"components/Text\";\nimport * as S from \"./style\";\n\nconst UserCard = ({ user, onFavorite, isFavorited }) => {\n  return (\n    <S.User>\n      <S.UserPicture src={user?.picture.large} alt=\"\" />\n      <S.UserInfo>\n        <Text size=\"22px\" bold>\n          {user?.name.title} {user?.name.first} {user?.name.last}\n        </Text>\n        <Text size=\"14px\">{user?.email}</Text>\n        <Text size=\"14px\">\n          {user?.location.street.number} {user?.location.street.name}\n        </Text>\n        <Text size=\"14px\">Country: {user?.location.country}</Text>\n      </S.UserInfo>\n      <S.IconButtonWrapper isVisible={isFavorited}>\n        <IconButton onClick={onFavorite}>\n          <FavoriteIcon color=\"error\" />\n        </IconButton>\n      </S.IconButtonWrapper>\n    </S.User>\n  );\n};\n\nexport default UserCard;\n","export const Countries = [\n  { code: \"AU\", name: \"Australia\" },\n  { code: \"BR\", name: \"Brazil\" },\n  { code: \"CA\", name: \"Canada\" },\n  { code: \"CH\", name: \"Switzerland\" },\n  { code: \"DE\", name: \"Germany\" },\n  { code: \"DK\", name: \"Denmark\" },\n  { code: \"ES\", name: \"Spain\" },\n  { code: \"FI\", name: \"Finland\" },\n  { code: \"FR\", name: \"France\" },\n  { code: \"GB\", name: \"United Kingdom\" },\n  { code: \"IE\", name: \"Ireland\" },\n  { code: \"IR\", name: \"Iran\" },\n  { code: \"NO\", name: \"Norway\" },\n  { code: \"NL\", name: \"Netherlands\" },\n  { code: \"NZ\", name: \"New Zealand\" },\n  { code: \"TR\", name: \"Turkey\" },\n  { code: \"US\", name: \"United State\" },\n];\n","import styled from \"styled-components\";\nimport {\n  Checkbox,\n  Chip,\n  FormControl,\n  Input,\n  InputLabel,\n  ListItemText,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\n\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n  width: 90%;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 100%;\n  margin: 0 auto;\n  height: calc(100vh - 270px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const FormControlStyled = styled(FormControl)`\n  width: 100%;\n\n  .MuiChip-root {\n    margin-right: 5px;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Checkbox,\n  Chip,\n  FormControl,\n  Input,\n  InputLabel,\n  ListItemText,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport Spinner from \"components/Spinner\";\nimport UserCard from \"components/UserCard\";\nimport { Countries } from \"services/countries\";\nimport { useInfiniteScroll } from \"hooks/useInfiniteScroll\";\nimport * as S from \"./style\";\n\nconst UserList = ({\n  users,\n  isLoading,\n  fetchUsers,\n  resetUsers,\n  favorites,\n  toggleFavorite,\n}) => {\n  const [selectedCountries, setSelectedCountries] = useState([]);\n  const [infiniteRef] = useInfiniteScroll({\n    loading: isLoading,\n    onLoadMore: () => fetchUsers(selectedCountries),\n  });\n\n  const handleOnClickCountry = (event) => {\n    const { value } = event.target;\n\n    setSelectedCountries(value);\n    resetUsers();\n  };\n\n  useEffect(() => {\n    fetchUsers(selectedCountries);\n  }, [selectedCountries]);\n\n  return (\n    <S.UserList>\n      <CountriesSelect\n        selectedCountries={selectedCountries}\n        onChange={handleOnClickCountry}\n      />\n      <S.List>\n        {users.map((user, index) => (\n          <UserCard\n            key={index}\n            user={user}\n            isFavorited={!!favorites.find((d) => d.email === user.email)}\n            onFavorite={() => toggleFavorite(user)}\n          />\n        ))}\n        <S.SpinnerWrapper ref={infiniteRef}>\n          <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\n        </S.SpinnerWrapper>\n      </S.List>\n    </S.UserList>\n  );\n};\n\nconst CountriesSelect = ({ selectedCountries, onChange }) => {\n  return (\n    <S.FormControlStyled>\n      <InputLabel id=\"demo-simple-select-label\">Filter by country</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        multiple\n        placeholder=\"Select Countries\"\n        value={selectedCountries}\n        onChange={onChange}\n        input={<Input />}\n        renderValue={(selected) => (\n          <div>\n            {selected.map((value) => (\n              <Chip key={value} label={Countries.find((c) => c.code === value).name} />\n            ))}\n          </div>\n        )}\n      >\n        {Countries.map((name) => (\n          <MenuItem key={name.code} value={name.code}>\n            <Checkbox checked={selectedCountries.includes(name.code)} />\n            <ListItemText primary={name.name} />\n          </MenuItem>\n        ))}\n      </Select>\n    </S.FormControlStyled>\n  );\n};\n\nexport default UserList;\n","import { useEffect } from \"react\";\nimport { useTrackVisibility } from \"react-intersection-observer-hook\";\n\nconst DEFAULT_DELAY_IN_MS = 100;\n\n// This is helper hook that will be used to track visibility of the element (loading indicator)\n// and call the callback function when the element is visible.\n// It is used to load more data when the user scrolls to the bottom of the page/container.\nexport const useInfiniteScroll = ({ loading, onLoadMore }) => {\n  const [ref, { rootRef, isVisible }] = useTrackVisibility();\n\n  const shouldLoadMore = !loading && isVisible;\n\n  useEffect(() => {\n    if (shouldLoadMore) {\n      // When we trigger 'onLoadMore' and new items are added to the list,\n      // right before they become rendered on the screen, 'loading' becomes false\n      // and 'isVisible' can be true for a brief time, based on the scroll position.\n      // So, it triggers 'onLoadMore' just after the first one is finished.\n      // We use a small delay here to prevent this kind of situations.\n      const timer = setTimeout(() => {\n        onLoadMore();\n      }, DEFAULT_DELAY_IN_MS);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [onLoadMore, shouldLoadMore]);\n\n  return [ref, { rootRef }];\n};\n","export const LocalStorage = {\n  get: (key) => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : null;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  },\n\n  set(key, value) {\n    try {\n      window.localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  },\n};\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { LocalStorage } from \"services/localStorage\";\n\nexport const useFavoritesList = () => {\n  const [favorites, setFavorites] = useState(() => LocalStorage.get(\"favorited\") || []);\n\n  async function toggleFavorite(user) {\n    const isExist = favorites.find((f) => f.id === user.id);\n    if (isExist) {\n      setFavorites(favorites.filter((f) => f.id !== user.id));\n    } else {\n      setFavorites([...favorites, user]);\n    }\n  }\n\n  useEffect(() => {\n    LocalStorage.set(\"favorited\", favorites);\n  }, [favorites]);\n\n  return { favorites, toggleFavorite };\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Page = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n","import React from \"react\";\nimport * as S from \"./style\";\n\nconst Layout = ({ children }) => {\n  return (\n    <S.Container>\n      <S.Page>{children}</S.Page>\n    </S.Container>\n  );\n};\n\nexport default Layout;\n","import styled from \"styled-components\";\n\nexport const Title = styled.div`\n  display: flex;\n  text-align: center;\n\n  @media (max-width: 800px) {\n    span {\n      font-size: 2rem;\n    }\n  }\n`;\n","import React from \"react\";\nimport Text from \"components/Text\";\nimport * as S from \"./style\";\n\nconst Title = ({ children }) => {\n  return (\n    <S.Title>\n      <Text size=\"64px\" bold>\n        {children}\n      </Text>\n    </S.Title>\n  );\n};\n\nexport default Title;\n","import React from \"react\";\nimport UserList from \"components/UserList\";\nimport { usePeopleFetch } from \"hooks\";\nimport { useFavoritesList } from \"hooks/useFavoritesList\";\nimport Layout from \"components/Layout\";\nimport Title from \"components/Title\";\n\nconst Home = (props) => {\n  const { users, isLoading, fetchUsers, resetUsers } = usePeopleFetch();\n  const { favorites, toggleFavorite } = useFavoritesList();\n\n  return (\n    <Layout>\n      <Title>PplFinder</Title>\n\n      <UserList\n        users={users}\n        isLoading={isLoading}\n        fetchUsers={fetchUsers}\n        resetUsers={resetUsers}\n        favorites={favorites}\n        toggleFavorite={toggleFavorite}\n      />\n    </Layout>\n  );\n};\n\nexport default React.memo(Home);\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const usePeopleFetch = () => {\n  const [users, setUsers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function fetchUsers(countries = [], reset = false) {\n    setIsLoading(true);\n    const response = await axios.get(\n      `https://randomuser.me/api/?results=15&page=${page}^=&nat=${countries.join(\",\")}`\n    );\n    setIsLoading(false);\n    setUsers(users.concat(response.data.results));\n    setPage(page + 1);\n  }\n\n  const reset = () => {\n    setUsers([]);\n    setPage(1);\n  };\n\n  return { users, isLoading, fetchUsers, resetUsers: reset };\n};\n","import styled from \"styled-components\";\n\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n  width: 90%;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 100%;\n  margin: 0 auto;\n  height: calc(100vh - 270px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const Empty = styled.div`\n  font-size: 2rem;\n  font-style: italic;\n  text-align: center;\n  opacity: 0.5;\n`;\n","import React from \"react\";\nimport UserCard from \"components/UserCard\";\nimport * as S from \"./style\";\n\nconst FavoritesList = ({ favorites, toggleFavorite }) => {\n  return (\n    <S.UserList>\n      <S.List>\n        {favorites.length ? (\n          favorites.map((user, index) => {\n            return (\n              <UserCard\n                key={index}\n                user={user}\n                isFavorited\n                onFavorite={() => toggleFavorite(user)}\n              />\n            );\n          })\n        ) : (\n          <S.Empty>You don't have any favorites yet.</S.Empty>\n        )}\n      </S.List>\n    </S.UserList>\n  );\n};\n\nexport default FavoritesList;\n","import React from \"react\";\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport { useFavoritesList } from \"hooks/useFavoritesList\";\nimport FavoritesList from \"components/FavoritesList\";\nimport Title from \"components/Title\";\nimport Layout from \"components/Layout\";\n\nconst Favorites = () => {\n  const { favorites, toggleFavorite } = useFavoritesList();\n\n  return (\n    <Layout>\n      <Title>Your Favorites</Title>\n      <FavoritesList favorites={favorites} toggleFavorite={toggleFavorite} />\n    </Layout>\n  );\n};\n\nexport default Favorites;\n","export const SIZE = {\n  small: \"small\",\n  medium: \"medium\",\n  large: \"large\",\n};\n\nexport const VARIANT = {\n  text: \"text\",\n  filled: \"filled\",\n  outlined: \"outlined\",\n  standard: \"standard\",\n  contained: \"contained\",\n};\n\nexport const COLORS = {\n  default: \"default\",\n  inherit: \"inherit\",\n  primary: \"primary\",\n  secondary: \"secondary\",\n};\n\nexport const THEMES = {\n  LIGHT: \"light\",\n  DARK: \"dark\",\n};\n","import React, { useState } from \"react\";\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { THEMES } from \"services/constant\";\n\nconst ThemeContext = React.createContext();\n\nconst ThemeProvider = ({ children }) => {\n  const [themeState, setTheme] = useState(THEMES.DARK);\n\n  const primaryColor = themeState === THEMES.LIGHT ? \"#545454\" : \"#84ffff\";\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        overrides: {},\n        palette: {\n          type: themeState,\n          primary: {\n            main: primaryColor,\n          },\n        },\n      }),\n    [themeState]\n  );\n\n  return (\n    <ThemeContext.Provider value={{ theme: themeState, setTheme }}>\n      <Provider theme={theme}>\n        <CssBaseline />\n        <GlobalStyles theme={theme} />\n        {children}\n      </Provider>\n    </ThemeContext.Provider>\n  );\n};\n\nconst GlobalStyles = createGlobalStyle`\n    :not(.tox-toolbar)::-webkit-scrollbar {\n      width: 4;\n      background: #f9f9f9;\n    }\n\n    ::-webkit-scrollbar-track {\n      background: ${({ theme }) => theme.palette.background.default};\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background: ${({ theme }) => theme.palette.primary.main};\n      background-clip: padding-box;\n      border: 7px solid transparent;\n    }\n  `;\n\nexport function useTheme() {\n  const context = React.useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error(`useTheme must be used within a ThemeContext Provider`);\n  }\n  return context;\n}\n\nexport default ThemeProvider;\n","import React, { useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { useTheme } from \"theme/ThemeProvider\";\nimport { IconButton } from \"@material-ui/core\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport { THEMES } from \"services/constant\";\n\nconst NavBar = () => {\n  const [value, setValue] = useState(0);\n  const { pathname } = useLocation();\n  const { theme, setTheme } = useTheme();\n\n  const handleChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <AppBar\n      color=\"transparent\"\n      style={{\n        position: \"fixed\",\n        top: 0,\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Tabs\n        value={pathname}\n        onChange={handleChange}\n        aria-label=\"Navigation\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <Tab label=\"Home\" value=\"/\" to=\"/\" component={Link} />\n        <Tab label=\"Favorites\" value=\"/favorites\" to=\"/favorites\" component={Link} />\n      </Tabs>\n      <IconButton\n        aria-label=\"change theme\"\n        onClick={() => setTheme(theme === THEMES.LIGHT ? THEMES.DARK : THEMES.LIGHT)}\n      >\n        {theme === THEMES.LIGHT ? <WbSunnyIcon /> : <Brightness3Icon />}\n      </IconButton>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home, Favorites } from \"pages\";\nimport { ThemeProvider } from \"theme\";\nimport NavBar from \"components/NavBar\";\n\nconst AppRouter = () => {\n  return (\n    <ThemeProvider>\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/favorites\" component={Favorites} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"AppRouter\";\n\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}